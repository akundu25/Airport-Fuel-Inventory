openapi: 3.0.1
info:
  title: Airport Fuel Inventory
  description: Admin website for airport fuel management
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    user:
      type: object
      properties:
        name:
          type: string
          example: Arnab Kundu
        email:
          type: string
          example: ak@gmail.com
        password:
          type: string
        confirmPassword:
          type: string
      required:
        - email
        - password
    airport:
      type: object
      properties:
        _id:
          type: string
        airport_name:
          type: string
        fuel_available:
          type: number
        fuel_capacity:
          type: number
        no_of_transactions:
          type: number
      required:
        - airport_name
        - fuel_available
        - fuel_capacity
    aircraft:
      type: object
      properties:
        _id:
          type: string
        aircraft_no:
          type: string
        airline:
          type: string
      required:
        - aircraft_no
        - airline
    transaction:
      type: object
      properties:
        transaction_date_time:
          type: string
        transaction_type:
          type: string
        airport_id:
          type: string
        airport_name:
          type: string
        aircraft_id:
          type: string
        aircraft_name:
          type: string
        quantity:
          type: number
        transaction_id_parent:
          type: string
      required:
        - transaction_date_time
        - transaction_type
        - airport_id
        - airport_name
        - quantity
    error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              msg:
                type: string
              location:
                type: string
              param:
                type: string
            required:
              - msg
      required:
        - errors
    pagination:
      type: object
      properties:
        limit:
          type: number
        page:
          type: number
      required:
        - limit
        - page
security:
  - bearerAuth: []
tags:
  name: UserAuthentication
  description: Authenticating and authorising users
  name: Airport
  description: All operations relating to airport
  name: Aircraft
  description: All operations relating to aircraft
  name: Transaction
  description: All operations relating to transactions
paths:
  /user/login:
    post:
      tags: [UserAuthentication]
      summary: Login of a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientUser:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                  token:
                    type: string
                required:
                  - clientUser
                  - token
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user/signup:
    post:
      tags: [UserAuthentication]
      summary: Signup of a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user:
    get:
      tags: [UserAuthentication]
      summary: Fetching all users
      responses:
        200:
          description: All users fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user/{id}:
    put:
      tags: [UserAuthentication]
      summary: Editing info of an user
      parameters:
        - name: id
          in: path
          required: true
          description: User id for user identification
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        200:
          description: User successfully edited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /user/delete/{id}:
    delete:
      tags: [UserAuthentication]
      summary: Deleting an user
      parameters:
        - name: id
          in: path
          required: true
          description: User id for user identification
          schema:
            type: string
      responses:
        200:
          description: User successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'



  /airports/{type}:
    get:
      tags: [Airport]
      summary: Fetching of airports
      parameters:
        - name: type
          in: path
          required: true
          description: Type of operation to be performed
          schema:
            type: string
            enum: [per-page, all, top-5]
        - name: limit
          in: query
          description: Number of docs per page (for type per-page)
          schema:
            type: number
        - name: page
          in: query
          description: Page number (for type per-page)
          schema:
            type: number
      responses:
        200:
          description: Fetching of airports successfull
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      next:
                        $ref: '#/components/schemas/pagination'
                      prev:
                        $ref: '#/components/schemas/pagination'
                      airports:
                        type: array
                        items:
                          $ref: '#/components/schemas/airport'
                    required:
                      - airports
                  - type: array
                    items:
                      $ref: '#/components/schemas/airport'
                  - type: object
                    properties:
                      top5NoOfTransactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/airport'
                      top5FuelAvailable:
                        type: array
                        items:
                          $ref: '#/components/schemas/airport'
                      top5FuelCapacity:
                        type: array
                        items:
                          $ref: '#/components/schemas/airport'
                    required:
                      - top5NoOfTransactions
                      - top5FuelAvailable
                      - top5FuelCapacity
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      
  /airports/add:
    post:
      tags: [Airport]
      summary: Adding a new airport
      parameters:
        - name: limit
          in: query
          required: true
          description: Number of docs per page
          schema:
            type: number
        - name: page
          in: query
          required: true
          description: Page number
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/airport'
      responses:
        200:
          description: Adding of airports successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  next:
                    $ref: '#/components/schemas/pagination'
                  prev:
                    $ref: '#/components/schemas/pagination'
                  airports:
                    type: array
                    items:
                      $ref: '#/components/schemas/airport'
                required:
                  - airports
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      
  /airports/edit:
    patch:
      tags: [Airport]
      summary: To edit an airport
      parameters:
        - name: limit
          in: query
          required: true
          description: Number of docs per page
          schema:
            type: number
        - name: page
          in: query
          required: true
          description: Page number
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/airport'
      responses:
        200:
          description: Editing of airports successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  next:
                    $ref: '#/components/schemas/pagination'
                  prev:
                    $ref: '#/components/schemas/pagination'
                  airports:
                    type: array
                    items:
                      $ref: '#/components/schemas/airport'
                required:
                  - airports
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /aircrafts/{type}:
    get:
      tags: [Aircraft]
      summary: Fetching aircrafts
      parameters:
        - name: type
          in: path
          required: true
          description: Type of operation to be performed
          schema:
            type: string
            enum: [per-page, all, top-5]
        - name: limit
          in: query
          description: Number of docs per page (for type per-page)
          schema:
            type: number
        - name: page
          in: query
          description: Page number (for type per-page)
          schema:
            type: number
      responses:
        200:
          description: Fetching of aircrafts successful
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      next:
                        $ref: '#/components/schemas/pagination'
                      prev:
                        $ref: '#/components/schemas/pagination'
                      aircrafts:
                        type: array
                        items:
                          $ref: '#/components/schemas/aircraft'
                    required:
                      - aircrafts
                  - type: array
                    items:
                      $ref: '#/components/schemas/aircraft'
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /aircrafts/add:
    post:
      tags: [Aircraft]
      summary: Adding a new aircraft
      parameters:
        - name: limit
          in: query
          required: true
          description: Number of docs per page
          schema:
            type: number
        - name: page
          in: query
          required: true
          description: Page number
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aircraft'
      responses:
        200:
          description: Adding of aircrafts successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  next:
                    $ref: '#/components/schemas/pagination'
                  prev:
                    $ref: '#/components/schemas/pagination'
                  aircrafts:
                    type: array
                    items:
                      $ref: '#/components/schemas/aircraft'
                required:
                  - aircrafts
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /aircrafts/edit:
    patch:
      tags: [Aircraft]
      summary: To edit an aircraft
      parameters:
        - name: limit
          in: query
          required: true
          description: Number of docs per page
          schema:
            type: number
        - name: page
          in: query
          required: true
          description: Page number
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aircraft'
      responses:
        200:
          description: Editing of aircrafts successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  next:
                    $ref: '#/components/schemas/pagination'
                  prev:
                    $ref: '#/components/schemas/pagination'
                  aircrafts:
                    type: array
                    items:
                      $ref: '#/components/schemas/aircraft'
                required:
                  - aircrafts
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /aircrafts/{aircraftId}:
    put:
      tags: [Aircraft]
      summary: Updating an aircraft
      parameters:
        - name: aircraftId
          in: path
          required: true
          description: aircraft id for identifying the aircraft
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aircraft'
      responses:
        200:
          description: Aircraft successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aircraft'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /aircrafts/delete/{aircraftId}:
    delete:
      tags: [Aircraft]
      summary: Deleting an aircraft
      parameters:
        - name: aircraftId
          in: path
          required: true
          description: aircraft id for identifying the aircraft
          schema:
            type: string
      responses:
        200:
          description: Aircraft deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /transactions/fetch/{type}:
    get:
      tags: [Transaction]
      summary: Fetch transactions
      parameters:
        - name: type
          in: path
          required: true
          description: Type of operation to be performed
          schema:
            type: string
            enum: [per-page, all]
        - name: limit
          in: query
          description: Number of docs per page (for type per-page)
          schema:
            type: number
        - name: page
          in: query
          description: Page number (for type per-page)
          schema:
            type: number
      responses:
        200:
          description: Fetching of transactions successful
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      next:
                        $ref: '#/components/schemas/pagination'
                      prev:
                        $ref: '#/components/schemas/pagination'
                      transactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/transaction'
                    required:
                      - transactions
                  - type: array
                    items:
                      $ref: '#/components/schemas/transaction'
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /transactions/{type}:
    post:
      tags: [Transaction]
      summary: Adding a transaction
      parameters:
        - name: type
          in: path
          required: true
          description: Type of operation to be performed
          schema:
            type: string
            enum: [add, reverse]
        - name: limit
          in: query
          required: true
          description: Number of docs per page
          schema:
            type: number
        - name: page
          in: query
          required: true
          description: Page number
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
      responses:
        200:
          description: Adding of transactions successful
          content:
            application/json:
              schema:
                type: object
                  properties:
                    next:
                      $ref: '#/components/schemas/pagination'
                    prev:
                      $ref: '#/components/schemas/pagination'
                    transactions:
                      type: array
                      items:
                        $ref: '#/components/schemas/transaction'
                  required:
                    - transactions
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /transactions/{transactionId}:
    put:
      tags: [Transaction]
      summary: Updating a transaction
      parameters:
        - name: transactionId
          required: true
          in: path
          description: Transaction id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
      responses:
        200:
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /transactions/delete/{transactionId}:
    delete:
      tags: [Transaction]
      summary: Deleting a transaction
      parameters:
        - name: transactionId
          required: true
          in: path
          description: Transaction id
          schema:
            type: string
      responses:
        200:
          description: Deleted the transaction successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'


  /fuel-consumption:
    get:
      tags: [FuelConsumption]
      summary: Fetching airports and their corresponding transactions
      parameters:
        - name: limit
          in: query
          required: true
          description: Number of docs per page
          schema:
            type: number
        - name: page
          in: query
          required: true
          description: Page number
          schema:
            type: number
      responses:
        200:
          description: Fetching of airports and their corresponding transactions successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  airports:
                    type: array
                    items:
                      $ref: '#/components/schemas/airport'
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/transaction'
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  

  /airport/{airportId}:
    put:
      tags: [Airport]
      summary: For updating an airport by it's id
      parameters:
        - name: airportId
          in: path
          schema:
            type: string
          required: true
          description: Airport Id for identifying the airport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/airport'
      responses:
        200:
          description: Updated the airport successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/airport'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /airport/delete/{airportId}:
    delete:
      tags: [Airport]
      summary: Deleting an airport
      parameters:
        - name: airportId
          in: path
          schema:
            type: string
          required: true
          description: Airport Id for identifying the airport
      responses:
        200:
          description: Deleted the airport successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /aircraft/top-5-airline:
    get:
      tags: [Aircraft]
      summary: Fetching the top 5 airlines with most number of aircrafts
      responses:
        200:
          description: Top 5 airlines with most number of aircrafts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    oneOf:
                      - type: string
                      - type: object
                        properties:
                          no_of_aircrafts:
                            type: number
        401:
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

